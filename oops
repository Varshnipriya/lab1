package example;


abstract class employee
{
    String name;
    int age;
    int hourrate;
    employee(String n,int ho,int ag)
    {
        name=n;
        hourrate=ho;
        age=ag;
    }
    abstract double CalcSalary(double  hours);

    String tostring()
    {
        return "name:"+name+" age:"+age+" hourrate:"+hourrate;
    }

}
class clerk extends employee
{
    double clerksalary;
    clerk(String a,int b,int c)
    {
        super(a,b,c);
    }
    public double CalcSalary(double  hours)
    {
        clerksalary=hours*hourrate;
        return clerksalary;
    }
}


class manager extends employee
{
    double managersalary;
    manager(String a,int b,int c)
    {
        super(a,b,c);
    }
    public double CalcSalary(double  hours)
    {
        managersalary=hours*hourrate;
        return managersalary;
    }



}
public class Sample
{
    public static void main(String[] args)
    {
        manager m1=new manager("kingsley",12,18);
        System.out.println("total salary:"+m1.CalcSalary(20));
        System.out.println(m1.tostring());
        manager m2=new manager("gowtham",12,19);
        System.out.println("total salary:"+m2.CalcSalary(20));
        System.out.println(m2.tostring());
        clerk cle=new clerk("muthu",10,19);
        System.out.println("total salary:"+cle.CalcSalary(18));
        System.out.println(cle.tostring());
    }
}



package inter;
public class Inter {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

      rectangle obj=new rectangle() 
      {
          @Override
          public void print() {
              throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
          }
      };
      obj.display();
      sportscar obj1=new sportscar() {
          @Override
          public void print() {
              throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
          }
      }; 
      obj.display(); 
      manager obj2=new manager();
      obj2.display();  
    }
    
}
      interface printable
      { 
          abstract void print();
      }
      abstract class rectangle implements printable
              { 
          public void display()
              { 
                  int area;
                  int l=10;
                  int b=20;
                  area=l*b;
                  System.out.println("Length="+l); 
                  System.out.println("breadth="+l);
                  System.out.println("Area="+area);
              }
      } 
 abstract class sportscar implements printable 
 { 
     public void display(char cooper) 
     {
         char bn=cooper;
         int mod=2022;
         int pri=500000;
         System.out.println("brand="+bn); 
         System.out.println("model="+mod);
         System.out.println("price="+pri);
         
     }
 abstract class manager implements printable
 {
     public void display(char ABC)
     {
         char n=ABC;
         int age=24;
         int empid=2343;
         double s=20000;
         System.out.println("name="+n); 
         System.out.println("employee id="+empid);
         System.out.println("employee age="+age);
         System.out.println("salary="+s);
         
     }
 }
 }
